@page "/"

@using System.Diagnostics.Eventing.Reader
@using System.Net.Mime
@inject IJSRuntime JS;

<h1>Hello, world!</h1>

<img src="/target.jpg" id="imageTarget" @onclick="OnElementClick" />
<p>Welcome to your new app.</p>
@if (dexists)
{
    <div @onclick="OnElementClick" style="        
        width: @(dradius*2)px;
        height: @(dradius*2)px;
        top: @(dy-dradius)px;
        left: @(dx-dradius)px;
        background-color: magenta;
        position: fixed;
        border-radius: @(dradius)px;
        "></div>
}


<SurveyPrompt Title="How is Blazor working for you?" />


@code {
    bool dexists = false;
    int dradius = 25;

    int dx;
    int dy;
    ElementReference MyElementReference;
    public class BoundingClientRect
    {
        public double X { get; set; }
        public double Y { get; set; }
        public double Width { get; set; }
        public double Height { get; set; }
        public double Top { get; set; }
        public double Right { get; set; }
        public double Bottom { get; set; }
        public double Left { get; set; }
    }

    private async Task OnElementClick(MouseEventArgs e)

    {
        //JS.InvokeVoidAsync("alert", "Hello, World");
        var result = await JS.InvokeAsync<BoundingClientRect>("AneClickFind", new object[] { "imageTarget" });
        var x = (int)(e.ClientX - result.Left);
        var y = (int)(e.ClientY - result.Top);
        //await JS.InvokeVoidAsync("alert", $"absolute-x: {e.ClientX}, absolute-x: {e.ClientY}\nrelative-x: {x}, relative-y: {y}");
        if (!dexists)
        {
            dexists = true;
            dx = (int)e.ClientX;
            dy = (int)e.ClientY;
        }
        else if((dx - e.ClientX >= dradius*-1 && dx - e.ClientX <= dradius || dx - e.ClientX == 0) && (dy - e.ClientY >= dradius * -1 && dy - e.ClientY <= dradius || dy - e.ClientY == 0) )
        {
            dexists = false;
        }
    }
}